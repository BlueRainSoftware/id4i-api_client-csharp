/* 
 * ID4i API
 *
 * ID4i HTTP API
 *
 * OpenAPI spec version: 0.2.4
 * Contact: info@bluerain.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using BlueRain.ID4i.Client;
using BlueRain.ID4i.Api;
using BlueRain.ID4i.Model;

namespace BlueRain.ID4i.Test
{
    /// <summary>
    ///  Class for testing RoutingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RoutingApiTests
    {
        private RoutingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RoutingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RoutingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RoutingApi
            //Assert.IsInstanceOfType(typeof(RoutingApi), instance, "instance is a RoutingApi");
        }

        
        /// <summary>
        /// Test GetRoute
        /// </summary>
        [Test]
        public void GetRouteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id4n = null;
            //string type = null;
            //bool? privateRoutes = null;
            //bool? publicRoutes = null;
            //bool? interpolate = null;
            //var response = instance.GetRoute(id4n, type, privateRoutes, publicRoutes, interpolate);
            //Assert.IsInstanceOf<Route> (response, "response is Route");
        }
        
        /// <summary>
        /// Test GetRoutingFile
        /// </summary>
        [Test]
        public void GetRoutingFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id4n = null;
            //long? organizationId = null;
            //var response = instance.GetRoutingFile(id4n, organizationId);
            //Assert.IsInstanceOf<RoutingFile> (response, "response is RoutingFile");
        }
        
        /// <summary>
        /// Test UpdateRoutingFile
        /// </summary>
        [Test]
        public void UpdateRoutingFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RoutingFileRequest rfr = null;
            //string id4n = null;
            //instance.UpdateRoutingFile(rfr, id4n);
            
        }
        
    }

}
